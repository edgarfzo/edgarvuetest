import {
  makeDimensionProps,
  useDimension
} from "./chunk-3CXHYGVY.js";
import {
  defineComponent,
  useRender
} from "./chunk-PU7QFRDK.js";
import {
  computed,
  createVNode
} from "./chunk-QO6ZHO7P.js";

// node_modules/vuetify/lib/components/VResponsive/VResponsive.mjs
import "/Users/edgar/projects/edgarvuetest/node_modules/vuetify/lib/components/VResponsive/VResponsive.css";
function useAspectStyles(props) {
  return {
    aspectStyles: computed(() => {
      const ratio = Number(props.aspectRatio);
      return ratio ? {
        paddingBottom: String(1 / ratio * 100) + "%"
      } : void 0;
    })
  };
}
var VResponsive = defineComponent({
  name: "VResponsive",
  props: {
    aspectRatio: [String, Number],
    contentClass: String,
    ...makeDimensionProps()
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      aspectStyles
    } = useAspectStyles(props);
    const {
      dimensionStyles
    } = useDimension(props);
    useRender(() => {
      var _slots$additional;
      return createVNode("div", {
        "class": "v-responsive",
        "style": dimensionStyles.value
      }, [createVNode("div", {
        "class": "v-responsive__sizer",
        "style": aspectStyles.value
      }, null), (_slots$additional = slots.additional) == null ? void 0 : _slots$additional.call(slots), slots.default && createVNode("div", {
        "class": ["v-responsive__content", props.contentClass]
      }, [slots.default()])]);
    });
    return {};
  }
});

export {
  VResponsive
};
//# sourceMappingURL=chunk-UODJHUOX.js.map
