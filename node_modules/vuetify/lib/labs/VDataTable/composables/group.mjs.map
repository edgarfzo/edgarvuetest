{"version":3,"file":"group.mjs","names":["computed","inject","provide","ref","getObjectValueByPath","propsFactory","makeDataTableGroupProps","groupBy","type","Array","default","VDataTableGroupSymbol","Symbol","for","createGroupBy","props","sortBy","opened","Set","sortByWithGroups","value","map","val","order","concat","toggleGroup","group","open","has","add","delete","extractRows","items","dive","arr","item","push","id","key","depth","data","useGroupBy","Error","groupItemsByProperty","length","groups","Map","raw","set","get","groupItems","prefix","groupedItems","rest","slice","forEach","flattenItems","flatItems","useGroupedItems"],"sources":["../../../../src/labs/VDataTable/composables/group.ts"],"sourcesContent":["// Utilities\nimport { computed, inject, provide, ref } from 'vue'\nimport { getObjectValueByPath, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { DataTableItem, GroupHeaderItem } from '../types'\nimport type { SortItem } from './sort'\n\nexport const makeDataTableGroupProps = propsFactory({\n  groupBy: {\n    type: Array as PropType<SortItem[]>,\n    default: () => ([]),\n  },\n}, 'data-table-group')\n\nconst VDataTableGroupSymbol: InjectionKey<{\n  opened: Ref<Set<string>>\n  toggleGroup: (group: string, value?: boolean) => void\n  sortByWithGroups: Ref<SortItem[]>\n  groupBy: Ref<readonly SortItem[]>\n  extractRows: (items: (DataTableItem | GroupHeaderItem)[]) => DataTableItem[]\n}> = Symbol.for('vuetify:data-table-group')\n\ntype GroupProps = {\n}\n\nexport function createGroupBy (props: GroupProps, groupBy: Ref<readonly SortItem[]>, sortBy: Ref<readonly SortItem[]>) {\n  const opened = ref(new Set<string>())\n\n  const sortByWithGroups = computed(() => {\n    return groupBy.value.map<SortItem>(val => ({\n      ...val,\n      order: val.order ?? false,\n    })).concat(sortBy.value)\n  })\n\n  function toggleGroup (group: string, value?: boolean) {\n    const open = value == null ? !opened.value.has(group) : value\n    if (open) opened.value.add(group)\n    else opened.value.delete(group)\n  }\n\n  function extractRows (items: (DataTableItem | GroupHeaderItem)[]) {\n    function dive (group: GroupHeaderItem): DataTableItem[] {\n      const arr = []\n\n      for (const item of group.items) {\n        if (item.type === 'item') arr.push(item)\n        else {\n          arr.push(...dive(item))\n        }\n      }\n\n      return arr\n    }\n    return dive({ type: 'group-header', items, id: 'dummy', key: 'dummy', value: 'dummy', depth: 0 })\n  }\n\n  // onBeforeMount(() => {\n  //   for (const key of groupedItems.value.keys()) {\n  //     opened.value.add(key)\n  //   }\n  // })\n\n  const data = { sortByWithGroups, toggleGroup, opened, groupBy, extractRows }\n\n  provide(VDataTableGroupSymbol, data)\n\n  return data\n}\n\nexport function useGroupBy () {\n  const data = inject(VDataTableGroupSymbol)\n\n  if (!data) throw new Error('Missing group!')\n\n  return data\n}\n\nfunction groupItemsByProperty (items: DataTableItem[], groupBy: string) {\n  if (!items.length) return []\n\n  const groups = new Map<any, DataTableItem[]>()\n  for (const item of items) {\n    const value = getObjectValueByPath(item.raw, groupBy)\n\n    if (!groups.has(value)) {\n      groups.set(value, [])\n    }\n    groups.get(value)!.push(item)\n  }\n\n  return groups\n}\n\nfunction groupItems (items: DataTableItem[], groupBy: string[], depth = 0, prefix = 'root') {\n  if (!groupBy.length) return []\n\n  const groupedItems = groupItemsByProperty(items, groupBy[0])\n  const groups: GroupHeaderItem[] = []\n\n  const rest = groupBy.slice(1)\n  groupedItems.forEach((items, value) => {\n    const key = groupBy[0]\n    const id = `${prefix}_${key}_${value}`\n    groups.push({\n      depth,\n      id,\n      key,\n      value,\n      items: rest.length ? groupItems(items, rest, depth + 1, id) : items,\n      type: 'group-header',\n    })\n  })\n\n  return groups\n}\n\nfunction flattenItems (items: (DataTableItem | GroupHeaderItem)[], opened: Set<string>) {\n  const flatItems: (DataTableItem | GroupHeaderItem)[] = []\n\n  for (const item of items) {\n    // TODO: make this better\n    if (item.type === 'group-header') {\n      if (item.value != null) {\n        flatItems.push(item)\n      }\n\n      if (opened.has(item.id) || item.value == null) {\n        flatItems.push(...flattenItems(item.items, opened))\n      }\n    } else {\n      flatItems.push(item)\n    }\n  }\n\n  return flatItems\n}\n\nexport function useGroupedItems (items: Ref<DataTableItem[]>, groupBy: Ref<readonly SortItem[]>, opened: Ref<Set<string>>) {\n  const flatItems = computed(() => {\n    if (!groupBy.value.length) return items.value\n\n    const groupedItems = groupItems(items.value, groupBy.value.map(item => item.key))\n\n    return flattenItems(groupedItems, opened.value)\n  })\n\n  return { flatItems }\n}\n"],"mappings":"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"}