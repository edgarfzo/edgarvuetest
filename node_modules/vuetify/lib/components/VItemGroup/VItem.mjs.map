{"version":3,"file":"VItem.mjs","names":["makeGroupItemProps","useGroupItem","VItemGroupSymbol","genericComponent","VItem","name","props","emits","val","setup","slots","isSelected","select","toggle","selectedClass","value","disabled","default"],"sources":["../../../src/components/VItemGroup/VItem.tsx"],"sourcesContent":["// Composables\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { VItemGroupSymbol } from './VItemGroup'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { SlotsToProps } from '@/util'\nimport type { GroupItemProvide } from '@/composables/group'\n\nexport const VItem = genericComponent<new () => {\n  $props: SlotsToProps<{\n    default: [GroupItemProvide]\n  }>\n}>()({\n  name: 'VItem',\n\n  props: makeGroupItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, select, toggle, selectedClass, value, disabled } = useGroupItem(props, VItemGroupSymbol)\n    return () => slots.default?.({\n      isSelected: isSelected.value,\n      selectedClass: selectedClass.value,\n      select,\n      toggle,\n      value: value.value,\n      disabled: disabled.value,\n    })\n  },\n})\n\nexport type VItem = InstanceType<typeof VItem>\n"],"mappings":"AAAA;AAAA,SACSA,kBAAkB,EAAEC,YAAY;AAAA,SAChCC,gBAAgB,4BAEzB;AAAA,SACSC,gBAAgB,gCAEzB;AAIA,OAAO,MAAMC,KAAK,GAAGD,gBAAgB,EAIjC,CAAC;EACHE,IAAI,EAAE,OAAO;EAEbC,KAAK,EAAEN,kBAAkB,EAAE;EAE3BO,KAAK,EAAE;IACL,gBAAgB,EAAGC,GAAuB,IAAK;EACjD,CAAC;EAEDC,KAAK,CAAEH,KAAK,QAAa;IAAA,IAAX;MAAEI;IAAM,CAAC;IACrB,MAAM;MAAEC,UAAU;MAAEC,MAAM;MAAEC,MAAM;MAAEC,aAAa;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGf,YAAY,CAACK,KAAK,EAAEJ,gBAAgB,CAAC;IAC5G,OAAO;MAAA;MAAA,yBAAMQ,KAAK,CAACO,OAAO,qBAAb,oBAAAP,KAAK,EAAW;QAC3BC,UAAU,EAAEA,UAAU,CAACI,KAAK;QAC5BD,aAAa,EAAEA,aAAa,CAACC,KAAK;QAClCH,MAAM;QACNC,MAAM;QACNE,KAAK,EAAEA,KAAK,CAACA,KAAK;QAClBC,QAAQ,EAAEA,QAAQ,CAACD;MACrB,CAAC,CAAC;IAAA;EACJ;AACF,CAAC,CAAC"}