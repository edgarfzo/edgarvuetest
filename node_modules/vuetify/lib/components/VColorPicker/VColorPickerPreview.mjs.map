{"version":3,"file":"VColorPickerPreview.mjs","names":["VSlider","defineComponent","HSVtoCSS","useRender","nullColor","VColorPickerPreview","name","props","color","type","Object","disabled","Boolean","hideAlpha","emits","setup","emit","background","h","a"],"sources":["../../../src/components/VColorPicker/VColorPickerPreview.tsx"],"sourcesContent":["// Styles\nimport './VColorPickerPreview.sass'\n\n// Components\nimport { VSlider } from '@/components/VSlider'\n\n// Utilities\nimport { defineComponent, HSVtoCSS, useRender } from '@/util'\nimport { nullColor } from './util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { HSV } from '@/util'\n\nexport const VColorPickerPreview = defineComponent({\n  name: 'VColorPickerPreview',\n\n  props: {\n    color: {\n      type: Object as PropType<HSV | null>,\n    },\n    disabled: Boolean,\n    hideAlpha: Boolean,\n  },\n\n  emits: {\n    'update:color': (color: HSV) => true,\n  },\n\n  setup (props, { emit }) {\n    useRender(() => (\n      <div\n        class={[\n          'v-color-picker-preview',\n          {\n            'v-color-picker-preview--hide-alpha': props.hideAlpha,\n          },\n        ]}\n      >\n        <div class=\"v-color-picker-preview__dot\">\n          <div style={{ background: HSVtoCSS(props.color ?? nullColor) }} />\n        </div>\n\n        <div class=\"v-color-picker-preview__sliders\">\n          <VSlider\n            class=\"v-color-picker-preview__track v-color-picker-preview__hue\"\n            modelValue={ props.color?.h }\n            onUpdate:modelValue={ h => emit('update:color', { ...(props.color ?? nullColor), h }) }\n            step={ 0 }\n            min={ 0 }\n            max={ 360 }\n            disabled={ props.disabled }\n            thumbSize={ 14 }\n            trackSize={ 8 }\n            trackFillColor=\"white\"\n            hideDetails\n          />\n\n          { !props.hideAlpha && (\n            <VSlider\n              class=\"v-color-picker-preview__track v-color-picker-preview__alpha\"\n              modelValue={ props.color?.a }\n              onUpdate:modelValue={ a => emit('update:color', { ...(props.color ?? nullColor), a }) }\n              step={ 0 }\n              min={ 0 }\n              max={ 1 }\n              disabled={ props.disabled }\n              thumbSize={ 14 }\n              trackSize={ 8 }\n              trackFillColor=\"white\"\n              hideDetails\n            />\n          ) }\n        </div>\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VColorPickerPreview = InstanceType<typeof VColorPickerPreview>\n"],"mappings":";AAAA;AACA;;AAEA;AAAA,SACSA,OAAO,gCAEhB;AAAA,SACSC,eAAe,EAAEC,QAAQ,EAAEC,SAAS;AAAA,SACpCC,SAAS,4BAElB;AAIA,OAAO,MAAMC,mBAAmB,GAAGJ,eAAe,CAAC;EACjDK,IAAI,EAAE,qBAAqB;EAE3BC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC;IACR,CAAC;IACDC,QAAQ,EAAEC,OAAO;IACjBC,SAAS,EAAED;EACb,CAAC;EAEDE,KAAK,EAAE;IACL,cAAc,EAAGN,KAAU,IAAK;EAClC,CAAC;EAEDO,KAAK,CAAER,KAAK,QAAY;IAAA,IAAV;MAAES;IAAK,CAAC;IACpBb,SAAS,CAAC;MAAA;MAAA;QAAA,SAEC,CACL,wBAAwB,EACxB;UACE,oCAAoC,EAAEI,KAAK,CAACM;QAC9C,CAAC;MACF;QAAA,SAEU;MAA6B;QAAA,SAC1B;UAAEI,UAAU,EAAEf,QAAQ,CAACK,KAAK,CAACC,KAAK,IAAIJ,SAAS;QAAE;MAAC;QAAA,SAGrD;MAAiC;QAAA,SAElC,2DAA2D;QAAA,8BACpDG,KAAK,CAACC,KAAK,qBAAX,aAAaU,CAAC;QAAA,uBACLA,CAAC,IAAIF,IAAI,CAAC,cAAc,EAAE;UAAE,IAAIT,KAAK,CAACC,KAAK,IAAIJ,SAAS,CAAC;UAAEc;QAAE,CAAC,CAAC;QAAA,QAC9E,CAAC;QAAA,OACF,CAAC;QAAA,OACD,GAAG;QAAA,YACEX,KAAK,CAACI,QAAQ;QAAA,aACb,EAAE;QAAA,aACF,CAAC;QAAA,kBACE,OAAO;QAAA;MAAA,UAItB,CAACJ,KAAK,CAACM,SAAS;QAAA,SAER,6DAA6D;QAAA,+BACtDN,KAAK,CAACC,KAAK,qBAAX,cAAaW,CAAC;QAAA,uBACLA,CAAC,IAAIH,IAAI,CAAC,cAAc,EAAE;UAAE,IAAIT,KAAK,CAACC,KAAK,IAAIJ,SAAS,CAAC;UAAEe;QAAE,CAAC,CAAC;QAAA,QAC9E,CAAC;QAAA,OACF,CAAC;QAAA,OACD,CAAC;QAAA,YACIZ,KAAK,CAACI,QAAQ;QAAA,aACb,EAAE;QAAA,aACF,CAAC;QAAA,kBACE,OAAO;QAAA;MAAA,QAGzB;IAAA,CAGN,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC"}